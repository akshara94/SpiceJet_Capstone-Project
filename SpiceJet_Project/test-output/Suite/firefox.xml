<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-VP7NJAU" failures="0" tests="5" name="firefox" time="0.094" errors="0" timestamp="2024-02-16T01:07:10 IST">
  <testcase classname="Engine.component.Base" name="@BeforeClass beforeTest" time="-1.708025830492E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest&amp;gt; into a @BeforeClass annotated beforeTest.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest> into a @BeforeClass annotated beforeTest.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass beforeTest -->
  <testcase classname="Engine.component.Base" name="@BeforeMethod beforemethod" time="-1.708025830499E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforemethod -->
  <testcase classname="Engine.component.Base" name="@AfterMethod aftermethod" time="-1.708025830505E9">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase classname="Engine.component.Base" name="@BeforeMethod beforemethod" time="-1.70802583051E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforemethod -->
  <testcase classname="Engine.component.Base" name="@AfterMethod aftermethod" time="-1.708025830533E9">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase classname="Engine.component.Base" name="@BeforeMethod beforemethod" time="-1.708025830547E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforemethod -->
  <testcase classname="Engine.component.Base" name="@AfterMethod aftermethod" time="-1.70802583056E9">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase classname="Engine.component.Base" name="@BeforeMethod beforemethod" time="-1.708025830563E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforemethod -->
  <testcase classname="Engine.component.Base" name="@AfterMethod aftermethod" time="-1.708025830569E9">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase classname="Engine.component.Base" name="@BeforeMethod beforemethod" time="-1.708025830572E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforemethod -->
  <testcase classname="Engine.component.Base" name="@AfterMethod aftermethod" time="-1.708025830578E9">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase classname="Test.component.TestCase_2" name="TestCases03_User_Oneway" time="0.0">
    <skipped/>
  </testcase> <!-- TestCases03_User_Oneway -->
  <testcase classname="Test.component.TestCase_2" name="Testcases04_user_roundtrip" time="0.0">
    <skipped/>
  </testcase> <!-- Testcases04_user_roundtrip -->
  <testcase classname="Test.component.TestCase_2" name="Testcases05_User_checkin" time="0.0">
    <skipped/>
  </testcase> <!-- Testcases05_User_checkin -->
  <testcase classname="Test.component.TestCase_2" name="Testcases06_User_FlightStatus" time="0.0">
    <skipped/>
  </testcase> <!-- Testcases06_User_FlightStatus -->
  <testcase classname="Test.component.TestCase_2" name="Testcases07_User_Manage" time="0.0">
    <skipped/>
  </testcase> <!-- Testcases07_User_Manage -->
</testsuite> <!-- firefox -->
